name: Deploy to Cloudflare

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set environment variables
        run: |
          echo "PROJECT_NAME=mirinda-ai-$(echo ${{ github.event.repository.name }} | tr '[:upper:]' '[:lower:]')-frontend" >> $GITHUB_ENV
          echo "WORKER_NAME=mirinda-ai-$(echo ${{ github.event.repository.name }} | tr '[:upper:]' '[:lower:]')-backend" >> $GITHUB_ENV

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies (Frontend)
        run: |
          cd frontend
          npm install

      - name: Build Frontend
        run: |
          cd frontend
          npm run build

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ env.PROJECT_NAME }}
          directory: frontend/dist
          gitHubToken: ${{ secrets.PAT_TOKEN }}
          wranglerVersion: 2

      - name: Install Wrangler
        run: npm install -g wrangler

      - name: Generate wrangler.toml
        run: |
          cd backend
          cat << EOF > wrangler.toml
          name = "${{ env.WORKER_NAME }}"
          account_id = "${{ secrets.CLOUDFLARE_ACCOUNT_ID }}"
          compatibility_date = "2025-08-03"
          main = "index.js"
          [[kv_namespaces]]
          binding = "KV_STORAGE"
          id = "${{ secrets.CLOUDFLARE_KV_NAMESPACE_ID }}"
          EOF

      - name: Deploy Worker
        run: |
          cd backend
          npx wrangler deploy --name ${{ env.WORKER_NAME }}
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          KV_STORAGE: ${{ secrets.CLOUDFLARE_KV_NAMESPACE_ID }}

      - name: Test Frontend
        run: |
          curl -f https://${{ env.PROJECT_NAME }}.pages.dev

      - name: Test Worker
        run: |
          curl -f https://${{ env.WORKER_NAME }}.workers.dev
